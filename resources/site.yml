Resources:
  StaticSite:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: ${self:custom.siteName}
      WebsiteConfiguration:
        IndexDocument: "index.html"
        ErrorDocument: "index.html"
  StaticSiteS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: StaticSite
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action:
              - s3:GetObject
            Resource:
              Fn::Join: [
                "", [
                "arn:aws:s3:::",
                {
                  "Ref": "StaticSite"
                },
                "/*"
              ]
              ]

  SiteCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: ${self:custom.siteName}.s3.amazonaws.com
            ## An identifier for the origin which must be unique within the distribution
            Id: "${self:custom.prefix}-site"
#            CustomOriginConfig:
#              HTTPPort: 80
#              HTTPSPort: 443
#              OriginProtocolPolicy: https-only
              ## In case you want to restrict the bucket access use S3OriginConfig and remove CustomOriginConfig
            S3OriginConfig:
              OriginAccessIdentity: ""
        Enabled: 'true'
          ## Uncomment the following section in case you are using a custom domain
        Aliases:
         - drydepaul.com
        DefaultRootObject: index.html
          ## Since the Single Page App is taking care of the routing we need to make sure ever path is served with index.html
        ## The only exception are files that actually exist e.h. app.js, reset.css
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
            ## The origin id defined above
          TargetOriginId: "${self:custom.prefix}-site"
          ## Defining if and how the QueryString and Cookies are forwarded to the origin which in this case is S3
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
            ## The protocol that users can use to access the files in the origin. To allow HTTP use `allow-all`
          ViewerProtocolPolicy: redirect-to-https
          ## The certificate to use when viewers use HTTPS to request objects.
        ViewerCertificate:
          # Resolve the Certificate ARN with code in future
          AcmCertificateArn: "arn:aws:acm:us-east-1:#{AWS::AccountId}:certificate/07ce8f4e-dea0-4dcc-88eb-73cb9bd6f288"
          SslSupportMethod: sni-only
          ## Uncomment the following section in case you want to enable logging for CloudFront requests
          # Logging:
          #   IncludeCookies: 'false'
          #   Bucket: mylogs.s3.amazonaws.com
          #   Prefix: myprefix
